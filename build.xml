<project name="glib-java-test" default="dist" basedir=".">
  <description>
    Experimental build file for the gstreamer-1.x-java playground.
  </description>
  <!-- set global properties for this build -->
  <property name="build" location="build" />
  <property name="dist" location="dist" />
  <property name="tests" location="tests" />

  <property name="jnaerator-output" location="src/lowlevel" />

  <property name="glib-src" location="${jnaerator-output}/glib20" />

  <property name="tests-src" location="${tests}/src" />
  <property name="tests-bin" location="${tests}/bin" />

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp />
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}" />
    <mkdir dir="${jnaerator-output}" />
    <mkdir dir="${tests-bin}" />
  </target>

  <target name="jnaerate">
    <java jar="jnaerator.jar" fork="true">
      <arg value="all-linux.jnaerator" />
      <arg value="-mode" />
      <arg value="Directory" />
      <arg value="-f" />
      <arg value="-v" />
      <arg value="-o" />
      <arg value="${jnaerator-output}" />
    </java>
  </target>

  <target name="compile"
          depends="init,jnaerate"
          description="compile all bindings">
    <javac srcdir="${glib-src}" destdir="${build}">
      <classpath>
        <pathelement location="jnaerator.jar" />
        <pathelement location="${build}" />
      </classpath>
    </javac>
  </target>

  <target name="compile-tests" depends="compile">
    <javac srcdir="${tests-src}" destdir="${tests-bin}">
      <classpath>
        <pathelement location="jnaerator.jar" />
        <pathelement location="${build}" />
      </classpath>
    </javac>
  </target>

  <target name="run-tests" depends="compile-tests">
    <!-- Run our single test for now -->
    <java classname="org.gstreamer.test.GListTest">
      <classpath>
        <pathelement location="jnaerator.jar" />
          <!-- jnaerator.jar is a shaded jar with BridJ included, on the
               classpath for this reason -->
        <pathelement location="${build}" />
        <pathelement location="${tests-bin}" />
      </classpath>
    </java>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib" />

    <jar jarfile="${dist}/lib/glib-java-test.jar" basedir="${build}" />
  </target>

  <target name="clean-compiled" description="clean up compilation results">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}" />
    <delete dir="${dist}" />
  </target>

  <target name="clean-jnaerator"
          description="clean up files generated by JNAerator">
    <delete>
      <fileset dir="." includes="_jnaerator.*" />
    </delete>
    <delete dir="${jnaerator-output}" />
  </target>

  <target name="clean-tests" description="clean up compiled test class files">
    <delete dir="${tests-bin}" />
  </target>

  <target name="clean"
          description="clean up everything"
          depends="clean-tests,clean-compiled,clean-jnaerator" />

</project>
