<project name="glib-java-test" default="dist" basedir=".">
  <description>
    Experimental build file for the gstreamer-1.x-java playground.
  </description>
  <!-- set global properties for this build -->
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="jnaerator-output" location="src/lowlevel"/>
  <property name="glib-src" location="${jnaerator-output}/glib20"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${jnaerator-output}"/>
  </target>

  <target name="jnaerate-glib">
    <java jar="jnaerator.jar" fork="true">
      <arg value="glib-linux.jnaerator"/>
      <arg value="-mode"/>
      <arg value="Directory"/>
      <arg value="-f"/>
      <arg value="-v"/>
      <arg value="-o"/>
      <arg value="${jnaerator-output}"/>
    </java>
  </target>

  <target name="jnaerate" depends="jnaerate-glib" />

  <target name="compile-glib" depends="init,jnaerate-glib"
        description="compile the glib bindings" >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${glib-src}" destdir="${build}">
        <classpath>
            <pathelement location="jnaerator.jar" />
            <pathelement location="${build}" />
        </classpath>
    </javac>
  </target>

  <target name="compile" depends="compile-glib" />

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <jar jarfile="${dist}/lib/glib-java-test.jar" basedir="${build}"/>
  </target>

  <target name="clean-compiled"
        description="clean up compilation results" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="clean-jnaerator"
        description="clean up files generated by JNAerator">
    <delete>
      <fileset dir="." includes="_jnaerator.*" />
    </delete>
    <delete dir="${jnaerator-output}" />
  </target>

  <target name="clean"
        description="clean up everything"
        depends="clean-compiled,clean-jnaerator"/>

</project>
